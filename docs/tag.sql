-- MySQL Script generated by MySQL Workbench
-- 03/04/20 15:01:04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema oshop
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tag` ;

CREATE TABLE IF NOT EXISTS `tag` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `product_has_tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `product_has_tag` ;

CREATE TABLE IF NOT EXISTS `product_has_tag` (
  `product_id` INT UNSIGNED NOT NULL,
  `tag_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`product_id`, `tag_id`),
  INDEX `fk_product_has_tag_tag1_idx` (`tag_id` ASC),
  INDEX `fk_product_has_tag_product1_idx` (`product_id` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `tag`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `tag` (`id`, `name`, `created_at`, `updated_at`) VALUES (1, 'fun', '2018-10-17 11:00:00', NULL);
INSERT INTO `tag` (`id`, `name`, `created_at`, `updated_at`) VALUES (2, 'best-seller', '2018-10-17 11:00:00', NULL);
INSERT INTO `tag` (`id`, `name`, `created_at`, `updated_at`) VALUES (3, 'trilogie', '2018-10-17 11:00:00', NULL);
INSERT INTO `tag` (`id`, `name`, `created_at`, `updated_at`) VALUES (4, 'saga', '2018-10-17 11:00:00', NULL);
INSERT INTO `tag` (`id`, `name`, `created_at`, `updated_at`) VALUES (5, 'sport', '2018-10-17 11:00:00', NULL);
INSERT INTO `tag` (`id`, `name`, `created_at`, `updated_at`) VALUES (6, 'animal', '2018-10-17 11:00:00', NULL);
INSERT INTO `tag` (`id`, `name`, `created_at`, `updated_at`) VALUES (7, 'fun', '2018-10-17 11:00:00', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `product_has_tag`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (1, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (2, 5);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (3, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (4, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (5, 3);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (12, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (12, 2);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (13, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (18, 2);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (18, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (20, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (20, 3);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (21, 5);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (22, 5);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (23, 5);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (24, 5);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (3, 6);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (8, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (8, 6);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (11, 1);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (11, 3);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (11, 6);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (13, 6);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (14, 6);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (15, 6);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (15, 5);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (1, 7);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (4, 7);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (6, 7);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (7, 7);
INSERT INTO `product_has_tag` (`product_id`, `tag_id`) VALUES (20, 7);

COMMIT;


-- -----------------------------------------------------
--requête pour retrouver les informations tags et produits
-- -----------------------------------------------------


SELECT `tag` .`name` AS tag_name, `product`.`name` AS product_name, `product`.`id`
FROM `tag`
INNER JOIN `product_has_tag` ON `tag`.`id` = `product_has_tag`.`tag_id`
INNER JOIN `product` ON `product`.`id` = `product_has_tag`.`product_id`
WHERE `product`.`id`=11


-- -----------------------------------------------------
--requête pour retrouver les informations des produits ayant le tag 6
-- -----------------------------------------------------

SELECT *
FROM `product`
INNER JOIN `product_has_tag` ON `product`.`id` = `product_has_tag`.`product_id`
WHERE `product_has_tag`.`tag_id` = 6



-- -----------------------------------------------------
--requête pour retrouver les informations des produits ayant le tag 2, version differente , avec des select imbriquée , possible car on selectionne les donnée d'une seule table (product)
-- -----------------------------------------------------


SELECT *
FROM `product`
WHERE `product`.`id`IN (
    SELECT  `product_has_tag`.`product_id` FROM `product_has_tag` WHERE `product_has_tag`.`tag_id` = 2
)